# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties import SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties

class TestSupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties(unittest.TestCase):
    """SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties:
        """Test SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties`
        """
        model = SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties()
        if include_optional:
            return SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties(
                printer_dpi = 300,
                customer_barcodes = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties_customer_barcodes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties_customerBarcodes_inner(
                        content = 'barcode content', 
                        text_below_barcode = 'text below barcode', 
                        symbology_code = '93', )
                    ],
                customer_logos = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties_customer_logos_inner.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties_customerLogos_inner(
                        file_format = 'PNG', 
                        content = 'base64 encoded image', )
                    ],
                encoding_format = 'pdf',
                image_options = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties_image_options_inner.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties_imageOptions_inner(
                        type_code = 'label', 
                        template_name = 'ECOM26_84_001', 
                        is_requested = True, 
                        hide_account_number = False, 
                        number_of_copies = 1, 
                        invoice_type = 'commercial', 
                        language_code = 'eng', 
                        language_country_code = 'br', 
                        language_script_code = 'Latn', 
                        encoding_format = 'png', 
                        render_dhl_logo = False, 
                        fit_labels_to_a4 = False, 
                        label_free_text = '', 
                        label_customer_data_text = '0', 
                        shipment_receipt_customer_data_text = '0', )
                    ],
                split_transport_and_waybill_doc_labels = True,
                all_documents_in_one_image = True,
                split_documents_by_pages = True,
                split_invoice_and_receipt = True,
                receipt_and_labels_in_one_image = True
            )
        else:
            return SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties(
        )
        """

    def testSupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties(self):
        """Test SupermodelIoLogisticsExpressCreateShipmentRequestOutputImageProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
