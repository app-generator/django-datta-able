# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content import SupermodelIoLogisticsExpressCreateShipmentRequestContent

class TestSupermodelIoLogisticsExpressCreateShipmentRequestContent(unittest.TestCase):
    """SupermodelIoLogisticsExpressCreateShipmentRequestContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupermodelIoLogisticsExpressCreateShipmentRequestContent:
        """Test SupermodelIoLogisticsExpressCreateShipmentRequestContent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupermodelIoLogisticsExpressCreateShipmentRequestContent`
        """
        model = SupermodelIoLogisticsExpressCreateShipmentRequestContent()
        if include_optional:
            return SupermodelIoLogisticsExpressCreateShipmentRequestContent(
                packages = [
                    openapi_client.models.package_definition_for_/shipments.Package definition for /shipments(
                        type_code = '2BP', 
                        weight = 22.501, 
                        dimensions = openapi_client.models.dimensions.dimensions(
                            length = 15.001, 
                            width = 15.001, 
                            height = 40.001, ), 
                        customer_references = [
                            openapi_client.models.package_reference_definition.Package Reference definition(
                                value = 'Customer reference', 
                                type_code = 'CU', )
                            ], 
                        identifiers = [
                            openapi_client.models.identifier_definition.Identifier definition(
                                type_code = 'shipmentId', 
                                value = '1234567890', 
                                data_identifier = '00', )
                            ], 
                        description = 'Piece content description', 
                        label_barcodes = [
                            openapi_client.models.supermodel_io_logistics_express_package_label_barcodes_inner.supermodelIoLogisticsExpressPackage_labelBarcodes_inner(
                                position = 'left', 
                                symbology_code = '93', 
                                content = '', 
                                text_below_barcode = 'text below left barcode', )
                            ], 
                        label_text = [
                            openapi_client.models.supermodel_io_logistics_express_package_label_text_inner.supermodelIoLogisticsExpressPackage_labelText_inner(
                                position = 'left', 
                                caption = 'text caption', 
                                value = 'text value', )
                            ], 
                        label_description = 'bespoke label description', 
                        reference_number = 1, )
                    ],
                is_customs_declarable = True,
                declared_value = 150,
                declared_value_currency = 'CZK',
                export_declaration = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration(
                    line_items = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner(
                            number = 1, 
                            description = 'line item description', 
                            price = 150, 
                            quantity = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_quantity.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_quantity(
                                value = 1, 
                                unit_of_measurement = 'BOX', ), 
                            commodity_codes = [
                                openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_commodity_codes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_commodityCodes_inner(
                                    type_code = 'outbound', 
                                    value = '851713', )
                                ], 
                            export_reason_type = 'permanent', 
                            manufacturer_country = 'CZ', 
                            weight = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_weight.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_weight(
                                net_value = 10, 
                                gross_value = 10, ), 
                            is_taxes_paid = True, 
                            additional_information = [
                                ''
                                ], 
                            customer_references = [
                                openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_customer_references_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_customerReferences_inner(
                                    type_code = 'AFE', 
                                    value = 'custref123', )
                                ], 
                            customs_documents = [
                                openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_customs_documents_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_customsDocuments_inner(
                                    type_code = '972', 
                                    value = 'custdoc456', )
                                ], 
                            pre_calculated_line_item_total_value = 150, )
                        ], 
                    invoice = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice(
                        number = '12345-ABC', 
                        date = 'Wed Mar 18 00:00:00 GMT 2020', 
                        signature_name = 'Brewer', 
                        signature_title = 'Mr.', 
                        signature_image = 'Base64 encoded image', 
                        instructions = [
                            '0'
                            ], 
                        customer_data_text_entries = [
                            ''
                            ], 
                        total_net_weight = 0, 
                        total_gross_weight = 0, 
                        terms_of_payment = '100 days', 
                        indicative_customs_values = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice_indicative_customs_values.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice_indicativeCustomsValues(
                            import_customs_duty_value = 150.57, 
                            import_taxes_value = 49.43, 
                            total_with_import_duties_and_taxes = 0, ), 
                        pre_calculated_total_values = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice_pre_calculated_total_values.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice_preCalculatedTotalValues(
                            pre_calculated_total_goods_value = 49.43, 
                            pre_calculated_total_invoice_value = 150.57, ), ), 
                    remarks = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_remarks_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_remarks_inner(
                            value = 'declaration remark', )
                        ], 
                    additional_charges = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_additional_charges_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_additionalCharges_inner(
                            value = 10, 
                            caption = 'fee', 
                            type_code = 'freight', )
                        ], 
                    destination_port_name = 'port details', 
                    place_of_incoterm = 'port of departure or destination details', 
                    payer_vat_number = '12345ED', 
                    recipient_reference = 'recipient reference', 
                    exporter = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_exporter.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_exporter(
                        id = '123', 
                        code = 'EXPCZ', ), 
                    package_marks = 'marks', 
                    declaration_notes = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_declaration_notes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_declarationNotes_inner(
                            value = 'up to three declaration notes', )
                        ], 
                    export_reference = 'export reference', 
                    export_reason = 'export reason', 
                    export_reason_type = 'permanent', 
                    licenses = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_licenses_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_licenses_inner(
                            type_code = 'export', 
                            value = 'license', )
                        ], 
                    shipment_type = 'personal', 
                    customs_documents = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_customs_documents_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_customsDocuments_inner(
                            type_code = '972', 
                            value = 'custdoc445', )
                        ], ),
                description = 'shipment description',
                us_filing_type_value = '12345',
                incoterm = 'DAP',
                unit_of_measurement = 'metric'
            )
        else:
            return SupermodelIoLogisticsExpressCreateShipmentRequestContent(
                packages = [
                    openapi_client.models.package_definition_for_/shipments.Package definition for /shipments(
                        type_code = '2BP', 
                        weight = 22.501, 
                        dimensions = openapi_client.models.dimensions.dimensions(
                            length = 15.001, 
                            width = 15.001, 
                            height = 40.001, ), 
                        customer_references = [
                            openapi_client.models.package_reference_definition.Package Reference definition(
                                value = 'Customer reference', 
                                type_code = 'CU', )
                            ], 
                        identifiers = [
                            openapi_client.models.identifier_definition.Identifier definition(
                                type_code = 'shipmentId', 
                                value = '1234567890', 
                                data_identifier = '00', )
                            ], 
                        description = 'Piece content description', 
                        label_barcodes = [
                            openapi_client.models.supermodel_io_logistics_express_package_label_barcodes_inner.supermodelIoLogisticsExpressPackage_labelBarcodes_inner(
                                position = 'left', 
                                symbology_code = '93', 
                                content = '', 
                                text_below_barcode = 'text below left barcode', )
                            ], 
                        label_text = [
                            openapi_client.models.supermodel_io_logistics_express_package_label_text_inner.supermodelIoLogisticsExpressPackage_labelText_inner(
                                position = 'left', 
                                caption = 'text caption', 
                                value = 'text value', )
                            ], 
                        label_description = 'bespoke label description', 
                        reference_number = 1, )
                    ],
                is_customs_declarable = True,
                description = 'shipment description',
                incoterm = 'DAP',
                unit_of_measurement = 'metric',
        )
        """

    def testSupermodelIoLogisticsExpressCreateShipmentRequestContent(self):
        """Test SupermodelIoLogisticsExpressCreateShipmentRequestContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
