# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.supermodel_io_logistics_express_create_shipment_response import SupermodelIoLogisticsExpressCreateShipmentResponse

class TestSupermodelIoLogisticsExpressCreateShipmentResponse(unittest.TestCase):
    """SupermodelIoLogisticsExpressCreateShipmentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupermodelIoLogisticsExpressCreateShipmentResponse:
        """Test SupermodelIoLogisticsExpressCreateShipmentResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupermodelIoLogisticsExpressCreateShipmentResponse`
        """
        model = SupermodelIoLogisticsExpressCreateShipmentResponse()
        if include_optional:
            return SupermodelIoLogisticsExpressCreateShipmentResponse(
                url = 'https://express.api.dhl.com/mydhlapi/shipments',
                shipment_tracking_number = '123456790',
                cancel_pickup_url = 'https://express.api.dhl.com/mydhlapi/shipment-pickups/PRG200227000256',
                tracking_url = 'https://express.api.dhl.com/mydhlapi/shipments/1234567890/tracking',
                dispatch_confirmation_number = 'PRG200227000256',
                packages = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_response_packages_inner.supermodelIoLogisticsExpressCreateShipmentResponse_packages_inner(
                        reference_number = 1, 
                        tracking_number = 'JD914600003889482921', 
                        tracking_url = 'https://express.api.dhl.com/mydhlapi/shipments/1234567890/tracking?PieceID=JD014600003889482921', 
                        volumetric_weight = 2.5, 
                        documents = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_response_packages_inner_documents_inner.supermodelIoLogisticsExpressCreateShipmentResponse_packages_inner_documents_inner(
                                image_format = 'PNG', 
                                content = 'base64 encoded document', 
                                type_code = 'qr-code', )
                            ], )
                    ],
                documents = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_response_documents_inner.supermodelIoLogisticsExpressCreateShipmentResponse_documents_inner(
                        image_format = 'PDF', 
                        content = 'base64 encoded document', 
                        type_code = 'label', 
                        package_reference_number = 1, )
                    ],
                on_demand_delivery_url = 'https://odd-test.dhl.com/odd-online/US/wH24aaaaa1',
                shipment_details = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner(
                        service_handling_feature_codes = [
                            'C'
                            ], 
                        volumetric_weight = 245.56, 
                        billing_code = 'IMP', 
                        service_content_code = 'WPX', 
                        customer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_customer_details.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_customerDetails(
                            shipper_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_customer_details_shipper_details.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_customerDetails_shipperDetails(
                                postal_address = openapi_client.models.address_definition_for_/shipments_response.Address definition for /shipments response(
                                    postal_code = '27801', 
                                    city_name = 'Kralupy nad Vltavou', 
                                    country_code = 'CZ', 
                                    province_code = 'CZ', 
                                    address_line1 = 'Na Cukrovaru 1063', 
                                    address_line2 = 'addres 2', 
                                    address_line3 = 'address 3', 
                                    city_district_name = 'Kralupy', 
                                    province_name = 'Central Bohemia', 
                                    country_name = 'Czech Republic', ), 
                                contact_information = openapi_client.models.contact_definition_of_/shipments_response.Contact definition of /shipments response(
                                    company_name = 'Better One s.r.o', 
                                    full_name = 'Huahom Peral', ), ), 
                            receiver_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_customer_details_shipper_details.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_customerDetails_shipperDetails(), ), 
                        origin_service_area = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_origin_service_area.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_originServiceArea(
                            facility_code = 'TSS', 
                            service_area_code = 'ZYP', 
                            outbound_sort_code = '', ), 
                        destination_service_area = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_destination_service_area.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_destinationServiceArea(
                            facility_code = 'GUM', 
                            service_area_code = 'GUM', 
                            inbound_sort_code = '', ), 
                        dhl_routing_code = 'GBSE186PJ+48500001', 
                        dhl_routing_data_id = '2L', 
                        delivery_date_code = 'S', 
                        delivery_time_code = 'X09', 
                        product_short_name = 'EXPRESS WORLDWIDE', 
                        value_added_services = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_value_added_services_inner.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_valueAddedServices_inner(
                                service_code = 'II', 
                                description = 'INSURANCE', )
                            ], 
                        pickup_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_pickup_details.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentDetails_inner_pickupDetails(
                            local_cutoff_date_and_time = '2021-10-04T16:30:00', 
                            gmt_cutoff_time = '17:00:00', 
                            cutoff_time_offset = 'PT30M', 
                            pickup_earliest = '09:00:00', 
                            pickup_latest = '17:00:00', 
                            total_transit_days = '8', 
                            pickup_additional_days = '0', 
                            delivery_additional_days = '0', 
                            pickup_day_of_week = '1', 
                            delivery_day_of_week = '2', ), )
                    ],
                shipment_charges = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_charges_inner.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentCharges_inner(
                        currency_type = 'BILLC', 
                        price_currency = 'USD', 
                        price = 147, 
                        service_breakdown = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_charges_inner_service_breakdown_inner.supermodelIoLogisticsExpressCreateShipmentResponse_shipmentCharges_inner_serviceBreakdown_inner(
                                name = 'EXPRESS WORLDWIDE', 
                                price = 147, 
                                type_code = 'FF', )
                            ], )
                    ],
                barcode_info = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_barcode_info.supermodelIoLogisticsExpressCreateShipmentResponse_barcodeInfo(
                    shipment_identification_number_barcode_content = 'base64 encoded airwaybill number', 
                    origin_destination_service_type_barcode_content = 'base64 encoded string', 
                    routing_barcode_content = 'base64 encoded string', 
                    tracking_number_barcodes = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_response_barcode_info_tracking_number_barcodes_inner.supermodelIoLogisticsExpressCreateShipmentResponse_barcodeInfo_trackingNumberBarcodes_inner(
                            reference_number = 1, 
                            tracking_number_barcode_content = 'base64 encoded string', )
                        ], ),
                estimated_delivery_date = openapi_client.models.supermodel_io_logistics_express_create_shipment_response_estimated_delivery_date.supermodelIoLogisticsExpressCreateShipmentResponse_estimatedDeliveryDate(
                    estimated_delivery_date = '2021-09-27', 
                    estimated_delivery_type = 'QDDC', ),
                warnings = [
                    'can't return prices'
                    ]
            )
        else:
            return SupermodelIoLogisticsExpressCreateShipmentResponse(
        )
        """

    def testSupermodelIoLogisticsExpressCreateShipmentResponse(self):
        """Test SupermodelIoLogisticsExpressCreateShipmentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
