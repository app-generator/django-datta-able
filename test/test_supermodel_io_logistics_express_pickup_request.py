# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.supermodel_io_logistics_express_pickup_request import SupermodelIoLogisticsExpressPickupRequest

class TestSupermodelIoLogisticsExpressPickupRequest(unittest.TestCase):
    """SupermodelIoLogisticsExpressPickupRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupermodelIoLogisticsExpressPickupRequest:
        """Test SupermodelIoLogisticsExpressPickupRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupermodelIoLogisticsExpressPickupRequest`
        """
        model = SupermodelIoLogisticsExpressPickupRequest()
        if include_optional:
            return SupermodelIoLogisticsExpressPickupRequest(
                planned_pickup_date_and_time = '2019-08-04T14:00:31GMT+01:00',
                close_time = '18:00',
                location = 'reception',
                location_type = 'residence',
                accounts = [
                    openapi_client.models.account_definition.Account definition(
                        type_code = 'shipper', 
                        number = '123456789', )
                    ],
                special_instructions = [
                    openapi_client.models.supermodel_io_logistics_express_pickup_request_special_instructions_inner.supermodelIoLogisticsExpressPickupRequest_specialInstructions_inner(
                        value = 'please ring door bell', 
                        type_code = 'TBD', )
                    ],
                remark = '',
                customer_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details.supermodelIoLogisticsExpressPickupRequest_customerDetails(
                    shipper_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details_shipper_details.supermodelIoLogisticsExpressPickupRequest_customerDetails_shipperDetails(
                        postal_address = openapi_client.models.address_definition.Address definition(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), ), 
                    receiver_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details_shipper_details.supermodelIoLogisticsExpressPickupRequest_customerDetails_shipperDetails(
                        postal_address = openapi_client.models.address_definition.Address definition(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), ), 
                    booking_requestor_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details_booking_requestor_details.supermodelIoLogisticsExpressPickupRequest_customerDetails_bookingRequestorDetails(
                        contact_information = , ), 
                    pickup_details = , ),
                shipment_details = [
                    openapi_client.models.supermodel_io_logistics_express_pickup_request_shipment_details_inner.supermodelIoLogisticsExpressPickupRequest_shipmentDetails_inner(
                        product_code = '0', 
                        local_product_code = '0', 
                        accounts = [
                            openapi_client.models.account_definition.Account definition(
                                type_code = 'shipper', 
                                number = '123456789', )
                            ], 
                        value_added_services = [
                            openapi_client.models.value_added_services_definition_for_/rates,_/products,_/landed_cost.Value Added Services definition for /rates, /products, /landed-cost(
                                service_code = 'II', 
                                local_service_code = 'II', 
                                value = 100, 
                                currency = 'GBP', 
                                method = 'cash', )
                            ], 
                        is_customs_declarable = True, 
                        declared_value = 150, 
                        declared_value_currency = 'CZK', 
                        unit_of_measurement = 'metric', 
                        shipment_tracking_number = '123456790', 
                        packages = [
                            openapi_client.models.package_definition_for_/rates,_/products,_/landed_cost.Package definition for /rates, /products, /landed-cost(
                                type_code = '3BX', 
                                weight = 10.5, 
                                dimensions = openapi_client.models.dimensions.dimensions(
                                    length = 25, 
                                    width = 35, 
                                    height = 15, ), )
                            ], )
                    ]
            )
        else:
            return SupermodelIoLogisticsExpressPickupRequest(
                planned_pickup_date_and_time = '2019-08-04T14:00:31GMT+01:00',
                accounts = [
                    openapi_client.models.account_definition.Account definition(
                        type_code = 'shipper', 
                        number = '123456789', )
                    ],
                customer_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details.supermodelIoLogisticsExpressPickupRequest_customerDetails(
                    shipper_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details_shipper_details.supermodelIoLogisticsExpressPickupRequest_customerDetails_shipperDetails(
                        postal_address = openapi_client.models.address_definition.Address definition(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), ), 
                    receiver_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details_shipper_details.supermodelIoLogisticsExpressPickupRequest_customerDetails_shipperDetails(
                        postal_address = openapi_client.models.address_definition.Address definition(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), ), 
                    booking_requestor_details = openapi_client.models.supermodel_io_logistics_express_pickup_request_customer_details_booking_requestor_details.supermodelIoLogisticsExpressPickupRequest_customerDetails_bookingRequestorDetails(
                        contact_information = , ), 
                    pickup_details = , ),
                shipment_details = [
                    openapi_client.models.supermodel_io_logistics_express_pickup_request_shipment_details_inner.supermodelIoLogisticsExpressPickupRequest_shipmentDetails_inner(
                        product_code = '0', 
                        local_product_code = '0', 
                        accounts = [
                            openapi_client.models.account_definition.Account definition(
                                type_code = 'shipper', 
                                number = '123456789', )
                            ], 
                        value_added_services = [
                            openapi_client.models.value_added_services_definition_for_/rates,_/products,_/landed_cost.Value Added Services definition for /rates, /products, /landed-cost(
                                service_code = 'II', 
                                local_service_code = 'II', 
                                value = 100, 
                                currency = 'GBP', 
                                method = 'cash', )
                            ], 
                        is_customs_declarable = True, 
                        declared_value = 150, 
                        declared_value_currency = 'CZK', 
                        unit_of_measurement = 'metric', 
                        shipment_tracking_number = '123456790', 
                        packages = [
                            openapi_client.models.package_definition_for_/rates,_/products,_/landed_cost.Package definition for /rates, /products, /landed-cost(
                                type_code = '3BX', 
                                weight = 10.5, 
                                dimensions = openapi_client.models.dimensions.dimensions(
                                    length = 25, 
                                    width = 35, 
                                    height = 15, ), )
                            ], )
                    ],
        )
        """

    def testSupermodelIoLogisticsExpressPickupRequest(self):
        """Test SupermodelIoLogisticsExpressPickupRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
