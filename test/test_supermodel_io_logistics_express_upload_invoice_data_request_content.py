# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.supermodel_io_logistics_express_upload_invoice_data_request_content import SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent

class TestSupermodelIoLogisticsExpressUploadInvoiceDataRequestContent(unittest.TestCase):
    """SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent:
        """Test SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent`
        """
        model = SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent()
        if include_optional:
            return SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent(
                export_declaration = [
                    openapi_client.models.export_declaration_definition_details.Export Declaration definition details(
                        line_items = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner(
                                number = 1, 
                                description = 'line item description', 
                                price = 150, 
                                quantity = openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_quantity.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_quantity(
                                    value = 1, 
                                    unit_of_measurement = 'BOX', ), 
                                commodity_codes = [
                                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_commodity_codes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_commodityCodes_inner(
                                        type_code = 'outbound', 
                                        value = '851713', )
                                    ], 
                                export_reason_type = 'permanent', 
                                manufacturer_country = 'CZ', 
                                weight = openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_weight.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_weight(
                                    net_value = 10, 
                                    gross_value = 10, ), 
                                is_taxes_paid = True, 
                                customer_references = [
                                    openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_customer_references_inner.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_customerReferences_inner(
                                        type_code = 'AFE', 
                                        value = 'customerref1', )
                                    ], 
                                customs_documents = [
                                    openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_customs_documents_inner.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_customsDocuments_inner(
                                        type_code = '972', 
                                        value = 'custdoc456', )
                                    ], 
                                pre_calculated_line_item_total_value = 150, )
                            ], 
                        invoice = openapi_client.models.supermodel_io_logistics_express_export_declaration_invoice.supermodelIoLogisticsExpressExportDeclaration_invoice(
                            number = '12345-ABC', 
                            date = '2021-03-18', 
                            function = 'import', 
                            indicative_customs_values = openapi_client.models.supermodel_io_logistics_express_export_declaration_invoice_indicative_customs_values.supermodelIoLogisticsExpressExportDeclaration_invoice_indicativeCustomsValues(
                                import_customs_duty_value = 150.57, 
                                import_taxes_value = 49.43, 
                                total_with_import_duties_and_taxes = 350.57, ), 
                            pre_calculated_total_values = openapi_client.models.supermodel_io_logistics_express_export_declaration_invoice_pre_calculated_total_values.supermodelIoLogisticsExpressExportDeclaration_invoice_preCalculatedTotalValues(
                                pre_calculated_total_goods_value = 49.43, 
                                pre_calculated_total_invoice_value = 150.57, ), ), 
                        remarks = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_remarks_inner.supermodelIoLogisticsExpressExportDeclaration_remarks_inner(
                                value = 'declaration remark', )
                            ], 
                        additional_charges = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_additional_charges_inner.supermodelIoLogisticsExpressExportDeclaration_additionalCharges_inner(
                                value = 10, 
                                type_code = 'admin', )
                            ], 
                        place_of_incoterm = 'port of departure or destination details', 
                        recipient_reference = 'recipient reference', 
                        exporter = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_exporter.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_exporter(
                            id = '123', 
                            code = 'EXPCZ', ), 
                        export_reason_type = 'permanent', 
                        shipment_type = 'personal', 
                        customs_documents = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_customs_documents_inner.supermodelIoLogisticsExpressExportDeclaration_customsDocuments_inner(
                                type_code = '972', 
                                value = 'custdoc445', )
                            ], 
                        incoterm = 'DAP', )
                    ],
                currency = 'EUR',
                unit_of_measurement = 'metric'
            )
        else:
            return SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent(
                export_declaration = [
                    openapi_client.models.export_declaration_definition_details.Export Declaration definition details(
                        line_items = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner(
                                number = 1, 
                                description = 'line item description', 
                                price = 150, 
                                quantity = openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_quantity.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_quantity(
                                    value = 1, 
                                    unit_of_measurement = 'BOX', ), 
                                commodity_codes = [
                                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_commodity_codes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_commodityCodes_inner(
                                        type_code = 'outbound', 
                                        value = '851713', )
                                    ], 
                                export_reason_type = 'permanent', 
                                manufacturer_country = 'CZ', 
                                weight = openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_weight.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_weight(
                                    net_value = 10, 
                                    gross_value = 10, ), 
                                is_taxes_paid = True, 
                                customer_references = [
                                    openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_customer_references_inner.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_customerReferences_inner(
                                        type_code = 'AFE', 
                                        value = 'customerref1', )
                                    ], 
                                customs_documents = [
                                    openapi_client.models.supermodel_io_logistics_express_export_declaration_line_items_inner_customs_documents_inner.supermodelIoLogisticsExpressExportDeclaration_lineItems_inner_customsDocuments_inner(
                                        type_code = '972', 
                                        value = 'custdoc456', )
                                    ], 
                                pre_calculated_line_item_total_value = 150, )
                            ], 
                        invoice = openapi_client.models.supermodel_io_logistics_express_export_declaration_invoice.supermodelIoLogisticsExpressExportDeclaration_invoice(
                            number = '12345-ABC', 
                            date = '2021-03-18', 
                            function = 'import', 
                            indicative_customs_values = openapi_client.models.supermodel_io_logistics_express_export_declaration_invoice_indicative_customs_values.supermodelIoLogisticsExpressExportDeclaration_invoice_indicativeCustomsValues(
                                import_customs_duty_value = 150.57, 
                                import_taxes_value = 49.43, 
                                total_with_import_duties_and_taxes = 350.57, ), 
                            pre_calculated_total_values = openapi_client.models.supermodel_io_logistics_express_export_declaration_invoice_pre_calculated_total_values.supermodelIoLogisticsExpressExportDeclaration_invoice_preCalculatedTotalValues(
                                pre_calculated_total_goods_value = 49.43, 
                                pre_calculated_total_invoice_value = 150.57, ), ), 
                        remarks = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_remarks_inner.supermodelIoLogisticsExpressExportDeclaration_remarks_inner(
                                value = 'declaration remark', )
                            ], 
                        additional_charges = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_additional_charges_inner.supermodelIoLogisticsExpressExportDeclaration_additionalCharges_inner(
                                value = 10, 
                                type_code = 'admin', )
                            ], 
                        place_of_incoterm = 'port of departure or destination details', 
                        recipient_reference = 'recipient reference', 
                        exporter = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_exporter.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_exporter(
                            id = '123', 
                            code = 'EXPCZ', ), 
                        export_reason_type = 'permanent', 
                        shipment_type = 'personal', 
                        customs_documents = [
                            openapi_client.models.supermodel_io_logistics_express_export_declaration_customs_documents_inner.supermodelIoLogisticsExpressExportDeclaration_customsDocuments_inner(
                                type_code = '972', 
                                value = 'custdoc445', )
                            ], 
                        incoterm = 'DAP', )
                    ],
                currency = 'EUR',
                unit_of_measurement = 'metric',
        )
        """

    def testSupermodelIoLogisticsExpressUploadInvoiceDataRequestContent(self):
        """Test SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
