# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.supermodel_io_logistics_express_create_shipment_request import SupermodelIoLogisticsExpressCreateShipmentRequest

class TestSupermodelIoLogisticsExpressCreateShipmentRequest(unittest.TestCase):
    """SupermodelIoLogisticsExpressCreateShipmentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupermodelIoLogisticsExpressCreateShipmentRequest:
        """Test SupermodelIoLogisticsExpressCreateShipmentRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupermodelIoLogisticsExpressCreateShipmentRequest`
        """
        model = SupermodelIoLogisticsExpressCreateShipmentRequest()
        if include_optional:
            return SupermodelIoLogisticsExpressCreateShipmentRequest(
                planned_shipping_date_and_time = '2019-08-04T14:00:31GMT+01:00',
                pickup = openapi_client.models.pickup.pickup(
                    is_requested = False, 
                    close_time = '18:00', 
                    location = 'reception', 
                    special_instructions = [
                        openapi_client.models.pickup_special_instructions_inner.pickup_specialInstructions_inner(
                            value = 'please ring door bell', 
                            type_code = 'TBD', )
                        ], 
                    pickup_details = openapi_client.models.pickup_pickup_details.pickup_pickupDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        registration_numbers = [
                            openapi_client.models.registration_numbers_definition.RegistrationNumbers definition(
                                type_code = 'VAT', 
                                number = 'CZ123456789', 
                                issuer_country_code = 'CZ', )
                            ], 
                        bank_details = [
                            openapi_client.models.supermodel_io_logistics_express_bank_details_inner.supermodelIoLogisticsExpressBankDetails_inner(
                                name = 'Russian Bank Name', 
                                settlement_local_currency = 'RUB', 
                                settlement_foreign_currency = 'USD', )
                            ], 
                        type_code = 'business', ), 
                    pickup_requestor_details = openapi_client.models.pickup_pickup_requestor_details.pickup_pickupRequestorDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        type_code = 'business', ), ),
                product_code = 'D',
                local_product_code = 'D',
                get_rate_estimates = True,
                accounts = [
                    openapi_client.models.account_definition.Account definition(
                        type_code = 'shipper', 
                        number = '123456789', )
                    ],
                value_added_services = [
                    openapi_client.models.value_added_services_definition_for_/shipments.Value Added Services definition for /shipments(
                        service_code = 'II', 
                        value = 100, 
                        currency = 'GBP', 
                        method = 'cash', 
                        dangerous_goods = [
                            openapi_client.models.supermodel_io_logistics_express_value_added_services_dangerous_goods_inner.supermodelIoLogisticsExpressValueAddedServices_dangerousGoods_inner(
                                content_id = '908', 
                                dry_ice_total_net_weight = 12, 
                                custom_description = '1 package Lithium ion batteries in compliance with Section II of P.I. 9661', 
                                un_codes = [
                                    '1234'
                                    ], )
                            ], )
                    ],
                output_image_properties = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties(
                    printer_dpi = 300, 
                    customer_barcodes = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties_customer_barcodes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties_customerBarcodes_inner(
                            content = 'barcode content', 
                            text_below_barcode = 'text below barcode', 
                            symbology_code = '93', )
                        ], 
                    customer_logos = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties_customer_logos_inner.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties_customerLogos_inner(
                            file_format = 'PNG', 
                            content = 'base64 encoded image', )
                        ], 
                    encoding_format = 'pdf', 
                    image_options = [
                        openapi_client.models.supermodel_io_logistics_express_create_shipment_request_output_image_properties_image_options_inner.supermodelIoLogisticsExpressCreateShipmentRequest_outputImageProperties_imageOptions_inner(
                            type_code = 'label', 
                            template_name = 'ECOM26_84_001', 
                            is_requested = True, 
                            hide_account_number = False, 
                            number_of_copies = 1, 
                            invoice_type = 'commercial', 
                            language_code = 'eng', 
                            language_country_code = 'br', 
                            language_script_code = 'Latn', 
                            encoding_format = 'png', 
                            render_dhl_logo = False, 
                            fit_labels_to_a4 = False, 
                            label_free_text = '', 
                            label_customer_data_text = '0', 
                            shipment_receipt_customer_data_text = '0', )
                        ], 
                    split_transport_and_waybill_doc_labels = True, 
                    all_documents_in_one_image = True, 
                    split_documents_by_pages = True, 
                    split_invoice_and_receipt = True, 
                    receipt_and_labels_in_one_image = True, ),
                customer_references = [
                    openapi_client.models.reference_definition.Reference definition(
                        value = 'Customer reference', 
                        type_code = 'CU', )
                    ],
                identifiers = [
                    openapi_client.models.identifier_definition.Identifier definition(
                        type_code = 'shipmentId', 
                        value = '1234567890', 
                        data_identifier = '00', )
                    ],
                customer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails(
                    shipper_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_shipper_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_shipperDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        registration_numbers = [
                            openapi_client.models.registration_numbers_definition.RegistrationNumbers definition(
                                type_code = 'VAT', 
                                number = 'CZ123456789', 
                                issuer_country_code = 'CZ', )
                            ], 
                        bank_details = [
                            openapi_client.models.supermodel_io_logistics_express_bank_details_inner.supermodelIoLogisticsExpressBankDetails_inner(
                                name = 'Russian Bank Name', 
                                settlement_local_currency = 'RUB', 
                                settlement_foreign_currency = 'USD', )
                            ], 
                        type_code = 'business', ), 
                    receiver_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_receiver_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_receiverDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        type_code = 'business', ), 
                    buyer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_buyer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_buyerDetails(
                        postal_address = , 
                        contact_information = openapi_client.models.contact_definition_(buyer).Contact definition (Buyer)(
                            email = 'buyer@domain.com', 
                            phone = '+44123456789', 
                            mobile_phone = '+42123456789', 
                            company_name = 'Customer Company Name', 
                            full_name = 'Mark Companer', ), 
                        type_code = 'business', ), 
                    importer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_importer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_importerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    exporter_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_exporter_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_exporterDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    seller_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_seller_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_sellerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    payer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_payer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_payerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    ultimate_consignee_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_ultimate_consignee_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_ultimateConsigneeDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = '', ), 
                    broker_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_broker_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_brokerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = '', ), ),
                content = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content.supermodelIoLogisticsExpressCreateShipmentRequest_content(
                    packages = [
                        openapi_client.models.package_definition_for_/shipments.Package definition for /shipments(
                            type_code = '2BP', 
                            weight = 22.501, 
                            dimensions = openapi_client.models.dimensions.dimensions(
                                length = 15.001, 
                                width = 15.001, 
                                height = 40.001, ), 
                            customer_references = [
                                openapi_client.models.package_reference_definition.Package Reference definition(
                                    value = 'Customer reference', 
                                    type_code = 'CU', )
                                ], 
                            identifiers = [
                                openapi_client.models.identifier_definition.Identifier definition(
                                    type_code = 'shipmentId', 
                                    value = '1234567890', 
                                    data_identifier = '00', )
                                ], 
                            description = 'Piece content description', 
                            label_barcodes = [
                                openapi_client.models.supermodel_io_logistics_express_package_label_barcodes_inner.supermodelIoLogisticsExpressPackage_labelBarcodes_inner(
                                    position = 'left', 
                                    symbology_code = '93', 
                                    content = '', 
                                    text_below_barcode = 'text below left barcode', )
                                ], 
                            label_text = [
                                openapi_client.models.supermodel_io_logistics_express_package_label_text_inner.supermodelIoLogisticsExpressPackage_labelText_inner(
                                    position = 'left', 
                                    caption = 'text caption', 
                                    value = 'text value', )
                                ], 
                            label_description = 'bespoke label description', 
                            reference_number = 1, )
                        ], 
                    is_customs_declarable = True, 
                    declared_value = 150, 
                    declared_value_currency = 'CZK', 
                    export_declaration = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration(
                        line_items = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner(
                                number = 1, 
                                description = 'line item description', 
                                price = 150, 
                                quantity = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_quantity.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_quantity(
                                    value = 1, 
                                    unit_of_measurement = 'BOX', ), 
                                commodity_codes = [
                                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_commodity_codes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_commodityCodes_inner(
                                        type_code = 'outbound', 
                                        value = '851713', )
                                    ], 
                                export_reason_type = 'permanent', 
                                manufacturer_country = 'CZ', 
                                weight = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_weight.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_weight(
                                    net_value = 10, 
                                    gross_value = 10, ), 
                                is_taxes_paid = True, 
                                additional_information = [
                                    ''
                                    ], 
                                customs_documents = [
                                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_customs_documents_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_customsDocuments_inner(
                                        type_code = '972', 
                                        value = 'custdoc456', )
                                    ], 
                                pre_calculated_line_item_total_value = 150, )
                            ], 
                        invoice = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice(
                            number = '12345-ABC', 
                            date = 'Wed Mar 18 00:00:00 GMT 2020', 
                            signature_name = 'Brewer', 
                            signature_title = 'Mr.', 
                            signature_image = 'Base64 encoded image', 
                            instructions = [
                                '0'
                                ], 
                            customer_data_text_entries = [
                                ''
                                ], 
                            total_net_weight = 0, 
                            total_gross_weight = 0, 
                            terms_of_payment = '100 days', 
                            indicative_customs_values = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice_indicative_customs_values.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice_indicativeCustomsValues(
                                import_customs_duty_value = 150.57, 
                                import_taxes_value = 49.43, 
                                total_with_import_duties_and_taxes = 0, ), 
                            pre_calculated_total_values = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice_pre_calculated_total_values.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice_preCalculatedTotalValues(
                                pre_calculated_total_goods_value = 49.43, 
                                pre_calculated_total_invoice_value = 150.57, ), ), 
                        remarks = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_remarks_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_remarks_inner(
                                value = 'declaration remark', )
                            ], 
                        additional_charges = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_additional_charges_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_additionalCharges_inner(
                                value = 10, 
                                caption = 'fee', 
                                type_code = 'freight', )
                            ], 
                        destination_port_name = 'port details', 
                        place_of_incoterm = 'port of departure or destination details', 
                        payer_vat_number = '12345ED', 
                        recipient_reference = 'recipient reference', 
                        exporter = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_exporter.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_exporter(
                            id = '123', 
                            code = 'EXPCZ', ), 
                        package_marks = 'marks', 
                        declaration_notes = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_declaration_notes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_declarationNotes_inner(
                                value = 'up to three declaration notes', )
                            ], 
                        export_reference = 'export reference', 
                        export_reason = 'export reason', 
                        export_reason_type = 'permanent', 
                        licenses = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_licenses_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_licenses_inner(
                                type_code = 'export', 
                                value = 'license', )
                            ], 
                        shipment_type = 'personal', 
                        customs_documents = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_customs_documents_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_customsDocuments_inner(
                                type_code = '972', 
                                value = 'custdoc445', )
                            ], ), 
                    description = 'shipment description', 
                    us_filing_type_value = '12345', 
                    incoterm = 'DAP', 
                    unit_of_measurement = 'metric', ),
                document_images = [
                    openapi_client.models.supermodel_io_logistics_express_document_images_inner.supermodelIoLogisticsExpressDocumentImages_inner(
                        type_code = 'INV', 
                        image_format = 'PDF', 
                        content = 'base64 encoded image', )
                    ],
                on_demand_delivery = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_on_demand_delivery.supermodelIoLogisticsExpressCreateShipmentRequest_onDemandDelivery(
                    delivery_option = 'servicepoint', 
                    location = 'front door', 
                    special_instructions = 'ringe twice', 
                    gate_code = '1234', 
                    where_to_leave = 'concierge', 
                    neighbour_name = 'Mr.Dan', 
                    neighbour_house_number = '777', 
                    authorizer_name = 'Newman', 
                    service_point_id = 'SPL123', 
                    requested_delivery_date = '2020-04-20', ),
                request_ondemand_delivery_url = False,
                shipment_notification = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_shipment_notification_inner.supermodelIoLogisticsExpressCreateShipmentRequest_shipmentNotification_inner(
                        type_code = 'email', 
                        receiver_id = 'receiver@email.com', 
                        language_code = 'eng', 
                        language_country_code = 'UK', 
                        bespoke_message = 'message to be included in the notification', )
                    ],
                prepaid_charges = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_prepaid_charges_inner.supermodelIoLogisticsExpressCreateShipmentRequest_prepaidCharges_inner(
                        type_code = 'freight', 
                        currency = 'CZK', 
                        value = 200, 
                        method = 'cash', )
                    ],
                get_transliterated_response = False,
                estimated_delivery_date = openapi_client.models.estimated_delivery_date.estimated delivery date(
                    is_requested = False, 
                    type_code = 'QDDC', ),
                get_additional_information = [
                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_get_additional_information_inner.supermodelIoLogisticsExpressCreateShipmentRequest_getAdditionalInformation_inner(
                        type_code = 'pickupDetails', 
                        is_requested = True, )
                    ],
                parent_shipment = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_parent_shipment.supermodelIoLogisticsExpressCreateShipmentRequest_parentShipment(
                    product_code = '0', 
                    packages_count = 1, )
            )
        else:
            return SupermodelIoLogisticsExpressCreateShipmentRequest(
                planned_shipping_date_and_time = '2019-08-04T14:00:31GMT+01:00',
                pickup = openapi_client.models.pickup.pickup(
                    is_requested = False, 
                    close_time = '18:00', 
                    location = 'reception', 
                    special_instructions = [
                        openapi_client.models.pickup_special_instructions_inner.pickup_specialInstructions_inner(
                            value = 'please ring door bell', 
                            type_code = 'TBD', )
                        ], 
                    pickup_details = openapi_client.models.pickup_pickup_details.pickup_pickupDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        registration_numbers = [
                            openapi_client.models.registration_numbers_definition.RegistrationNumbers definition(
                                type_code = 'VAT', 
                                number = 'CZ123456789', 
                                issuer_country_code = 'CZ', )
                            ], 
                        bank_details = [
                            openapi_client.models.supermodel_io_logistics_express_bank_details_inner.supermodelIoLogisticsExpressBankDetails_inner(
                                name = 'Russian Bank Name', 
                                settlement_local_currency = 'RUB', 
                                settlement_foreign_currency = 'USD', )
                            ], 
                        type_code = 'business', ), 
                    pickup_requestor_details = openapi_client.models.pickup_pickup_requestor_details.pickup_pickupRequestorDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        type_code = 'business', ), ),
                product_code = 'D',
                accounts = [
                    openapi_client.models.account_definition.Account definition(
                        type_code = 'shipper', 
                        number = '123456789', )
                    ],
                customer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails(
                    shipper_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_shipper_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_shipperDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        registration_numbers = [
                            openapi_client.models.registration_numbers_definition.RegistrationNumbers definition(
                                type_code = 'VAT', 
                                number = 'CZ123456789', 
                                issuer_country_code = 'CZ', )
                            ], 
                        bank_details = [
                            openapi_client.models.supermodel_io_logistics_express_bank_details_inner.supermodelIoLogisticsExpressBankDetails_inner(
                                name = 'Russian Bank Name', 
                                settlement_local_currency = 'RUB', 
                                settlement_foreign_currency = 'USD', )
                            ], 
                        type_code = 'business', ), 
                    receiver_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_receiver_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_receiverDetails(
                        postal_address = openapi_client.models.address_definition_for_/shipments_request.Address definition for /shipments request(
                            postal_code = '14800', 
                            city_name = 'Prague', 
                            country_code = 'CZ', 
                            province_code = 'CZ', 
                            address_line1 = 'V Parku 2308/10', 
                            address_line2 = 'addres2', 
                            address_line3 = 'addres3', 
                            county_name = 'Central Bohemia', 
                            province_name = 'Central Bohemia', 
                            country_name = 'Czech Republic', ), 
                        contact_information = openapi_client.models.contact_definition.Contact definition(
                            email = 'that@before.de', 
                            phone = '+1123456789', 
                            mobile_phone = '+60112345678', 
                            company_name = 'Company Name', 
                            full_name = 'John Brew', ), 
                        type_code = 'business', ), 
                    buyer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_buyer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_buyerDetails(
                        postal_address = , 
                        contact_information = openapi_client.models.contact_definition_(buyer).Contact definition (Buyer)(
                            email = 'buyer@domain.com', 
                            phone = '+44123456789', 
                            mobile_phone = '+42123456789', 
                            company_name = 'Customer Company Name', 
                            full_name = 'Mark Companer', ), 
                        type_code = 'business', ), 
                    importer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_importer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_importerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    exporter_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_exporter_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_exporterDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    seller_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_seller_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_sellerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    payer_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_payer_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_payerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = 'business', ), 
                    ultimate_consignee_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_ultimate_consignee_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_ultimateConsigneeDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = '', ), 
                    broker_details = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_customer_details_broker_details.supermodelIoLogisticsExpressCreateShipmentRequest_customerDetails_brokerDetails(
                        postal_address = , 
                        contact_information = , 
                        type_code = '', ), ),
                content = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content.supermodelIoLogisticsExpressCreateShipmentRequest_content(
                    packages = [
                        openapi_client.models.package_definition_for_/shipments.Package definition for /shipments(
                            type_code = '2BP', 
                            weight = 22.501, 
                            dimensions = openapi_client.models.dimensions.dimensions(
                                length = 15.001, 
                                width = 15.001, 
                                height = 40.001, ), 
                            customer_references = [
                                openapi_client.models.package_reference_definition.Package Reference definition(
                                    value = 'Customer reference', 
                                    type_code = 'CU', )
                                ], 
                            identifiers = [
                                openapi_client.models.identifier_definition.Identifier definition(
                                    type_code = 'shipmentId', 
                                    value = '1234567890', 
                                    data_identifier = '00', )
                                ], 
                            description = 'Piece content description', 
                            label_barcodes = [
                                openapi_client.models.supermodel_io_logistics_express_package_label_barcodes_inner.supermodelIoLogisticsExpressPackage_labelBarcodes_inner(
                                    position = 'left', 
                                    symbology_code = '93', 
                                    content = '', 
                                    text_below_barcode = 'text below left barcode', )
                                ], 
                            label_text = [
                                openapi_client.models.supermodel_io_logistics_express_package_label_text_inner.supermodelIoLogisticsExpressPackage_labelText_inner(
                                    position = 'left', 
                                    caption = 'text caption', 
                                    value = 'text value', )
                                ], 
                            label_description = 'bespoke label description', 
                            reference_number = 1, )
                        ], 
                    is_customs_declarable = True, 
                    declared_value = 150, 
                    declared_value_currency = 'CZK', 
                    export_declaration = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration(
                        line_items = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner(
                                number = 1, 
                                description = 'line item description', 
                                price = 150, 
                                quantity = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_quantity.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_quantity(
                                    value = 1, 
                                    unit_of_measurement = 'BOX', ), 
                                commodity_codes = [
                                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_commodity_codes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_commodityCodes_inner(
                                        type_code = 'outbound', 
                                        value = '851713', )
                                    ], 
                                export_reason_type = 'permanent', 
                                manufacturer_country = 'CZ', 
                                weight = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_weight.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_weight(
                                    net_value = 10, 
                                    gross_value = 10, ), 
                                is_taxes_paid = True, 
                                additional_information = [
                                    ''
                                    ], 
                                customs_documents = [
                                    openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_line_items_inner_customs_documents_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_lineItems_inner_customsDocuments_inner(
                                        type_code = '972', 
                                        value = 'custdoc456', )
                                    ], 
                                pre_calculated_line_item_total_value = 150, )
                            ], 
                        invoice = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice(
                            number = '12345-ABC', 
                            date = 'Wed Mar 18 00:00:00 GMT 2020', 
                            signature_name = 'Brewer', 
                            signature_title = 'Mr.', 
                            signature_image = 'Base64 encoded image', 
                            instructions = [
                                '0'
                                ], 
                            customer_data_text_entries = [
                                ''
                                ], 
                            total_net_weight = 0, 
                            total_gross_weight = 0, 
                            terms_of_payment = '100 days', 
                            indicative_customs_values = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice_indicative_customs_values.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice_indicativeCustomsValues(
                                import_customs_duty_value = 150.57, 
                                import_taxes_value = 49.43, 
                                total_with_import_duties_and_taxes = 0, ), 
                            pre_calculated_total_values = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_invoice_pre_calculated_total_values.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_invoice_preCalculatedTotalValues(
                                pre_calculated_total_goods_value = 49.43, 
                                pre_calculated_total_invoice_value = 150.57, ), ), 
                        remarks = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_remarks_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_remarks_inner(
                                value = 'declaration remark', )
                            ], 
                        additional_charges = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_additional_charges_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_additionalCharges_inner(
                                value = 10, 
                                caption = 'fee', 
                                type_code = 'freight', )
                            ], 
                        destination_port_name = 'port details', 
                        place_of_incoterm = 'port of departure or destination details', 
                        payer_vat_number = '12345ED', 
                        recipient_reference = 'recipient reference', 
                        exporter = openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_exporter.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_exporter(
                            id = '123', 
                            code = 'EXPCZ', ), 
                        package_marks = 'marks', 
                        declaration_notes = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_declaration_notes_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_declarationNotes_inner(
                                value = 'up to three declaration notes', )
                            ], 
                        export_reference = 'export reference', 
                        export_reason = 'export reason', 
                        export_reason_type = 'permanent', 
                        licenses = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_licenses_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_licenses_inner(
                                type_code = 'export', 
                                value = 'license', )
                            ], 
                        shipment_type = 'personal', 
                        customs_documents = [
                            openapi_client.models.supermodel_io_logistics_express_create_shipment_request_content_export_declaration_customs_documents_inner.supermodelIoLogisticsExpressCreateShipmentRequest_content_exportDeclaration_customsDocuments_inner(
                                type_code = '972', 
                                value = 'custdoc445', )
                            ], ), 
                    description = 'shipment description', 
                    us_filing_type_value = '12345', 
                    incoterm = 'DAP', 
                    unit_of_measurement = 'metric', ),
        )
        """

    def testSupermodelIoLogisticsExpressCreateShipmentRequest(self):
        """Test SupermodelIoLogisticsExpressCreateShipmentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
