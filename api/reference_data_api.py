# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.supermodel_io_logistics_express_reference_data_response import SupermodelIoLogisticsExpressReferenceDataResponse

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ReferenceDataApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def exp_api_reference_data(
        self,
        dataset_name: Annotated[StrictStr, Field(description="Must provide at least one datasetName value. If providing just the datasetName with no filterBy fields - the response will return the entire data set from the dataset table (bulk).")],
        filter_by_value: Annotated[Optional[StrictStr], Field(description="Use filter by value to query based on the specific string for optimized search.<br> <br> List of supported filterByValue per dataset (eg. dataset: filterByAttribute| supported filterByValue) <br><br> a) returnStatusMessage: serviceName|CreateShipment,DocumentImageRequest,RateRequest,RequestIdentifier,RequestPickup,AddressValidateRequest,TrackingRequest,UpdatePickup,UpdateShipment,UploadInvoiceData,DeleteShipment,DocumentRetrieve-ePOD <br> b) returnStatusMessage: operationName|get-image,identifiers,address-validate,    RouteRequest, shipments, tracking, upload-image,landed-cost,rates,upload-invoice-data,pickup,proof-of-delivery <br> c) returnStatusMessage: protocol|REST,SOAP,XMLPI <br> d) productCode: docNonDocIndicator|Y,N")] = None,
        filter_by_attribute: Annotated[Optional[StrictStr], Field(description="Use filter by attribute to define the list of supported attibuted for the specified datasetName. <br> List of supported attributes per dataset <br> (eg. dataset: supported filterByAttributes values) <br><br> a) country: countryCode, countryName <br> b) countryPostalcodeFormat: countryCode <br> c) dangerousGoods: serviceCode <br> d) incoterm: incoterm <br> e) productCode: productCode, countryCode, docNonDocIndicator <br> f) serviceCode: serviceCode, countryCode, chargeCodeTypeCode, serviceGroupDescription <br> g) packageTypeCode: packageTypeCode <br> h) documentTypeCode: customsDocumentTypeCode <br> i) customerShipmentReferenceType: shipmentReferenceTypeCode <br> j) customerPackageReferenceType: packageReferenceTypeCode <br> k) invoiceReferenceType: invoiceReferenceTypeCode <br> l) invoiceItemReferenceType: itemReferenceTypeCode <br> m) registrationNumberTypeCode: registrationTypeCode <br> n) commodityCategory: commodityCategoryCode, commodityCategoryGroup, commodityCategoryDescription <br> o) returnStatusMessage: statusCode, serviceName, operationName, protocol <br> p) trackingEventCode: eventTypeCode, eventTypeDescription, visibleToCustomer <br> q) unitOfMeasurement: unitOfMeasurement")] = None,
        comparison_operator: Annotated[Optional[StrictStr], Field(description="Use comparison operator to define the specific match condition for optimized search.")] = None,
        query_string: Annotated[Optional[StrictStr], Field(description="Use queryString for additional filter criteria in format of '[attribute]:[value]:[comparisonOperator]'. <br> All additional filters are applied together with logical connector 'AND'. <br> Maximum of three additional attribute-value-comparisonOperator combinations. <br> Multiple queryString parameters will be separated  by comma \",\" separator")] = None,
        message_reference: Annotated[Optional[Annotated[str, Field(min_length=28, strict=True, max_length=36)]], Field(description="Please provide message reference ")] = None,
        message_reference_date: Annotated[Optional[StrictStr], Field(description="Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2")] = None,
        plugin_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the plugin (applicable to 3PV only) ")] = None,
        plugin_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the plugin (applicable to 3PV only) ")] = None,
        shipping_system_platform_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the shipping platform(applicable to 3PV only) ")] = None,
        shipping_system_platform_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the shipping platform (applicable to 3PV only) ")] = None,
        webstore_platform_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the webstore platform (applicable to 3PV only) ")] = None,
        webstore_platform_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the webstore platform (applicable to 3PV only) ")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SupermodelIoLogisticsExpressReferenceDataResponse:
        """provide reference data currently used for MyDHL API services usage.

        The reference data service retrieves the reference data used for MyDHL API shipment or upload invoice data service. 

        :param dataset_name: Must provide at least one datasetName value. If providing just the datasetName with no filterBy fields - the response will return the entire data set from the dataset table (bulk). (required)
        :type dataset_name: str
        :param filter_by_value: Use filter by value to query based on the specific string for optimized search.<br> <br> List of supported filterByValue per dataset (eg. dataset: filterByAttribute| supported filterByValue) <br><br> a) returnStatusMessage: serviceName|CreateShipment,DocumentImageRequest,RateRequest,RequestIdentifier,RequestPickup,AddressValidateRequest,TrackingRequest,UpdatePickup,UpdateShipment,UploadInvoiceData,DeleteShipment,DocumentRetrieve-ePOD <br> b) returnStatusMessage: operationName|get-image,identifiers,address-validate,    RouteRequest, shipments, tracking, upload-image,landed-cost,rates,upload-invoice-data,pickup,proof-of-delivery <br> c) returnStatusMessage: protocol|REST,SOAP,XMLPI <br> d) productCode: docNonDocIndicator|Y,N
        :type filter_by_value: str
        :param filter_by_attribute: Use filter by attribute to define the list of supported attibuted for the specified datasetName. <br> List of supported attributes per dataset <br> (eg. dataset: supported filterByAttributes values) <br><br> a) country: countryCode, countryName <br> b) countryPostalcodeFormat: countryCode <br> c) dangerousGoods: serviceCode <br> d) incoterm: incoterm <br> e) productCode: productCode, countryCode, docNonDocIndicator <br> f) serviceCode: serviceCode, countryCode, chargeCodeTypeCode, serviceGroupDescription <br> g) packageTypeCode: packageTypeCode <br> h) documentTypeCode: customsDocumentTypeCode <br> i) customerShipmentReferenceType: shipmentReferenceTypeCode <br> j) customerPackageReferenceType: packageReferenceTypeCode <br> k) invoiceReferenceType: invoiceReferenceTypeCode <br> l) invoiceItemReferenceType: itemReferenceTypeCode <br> m) registrationNumberTypeCode: registrationTypeCode <br> n) commodityCategory: commodityCategoryCode, commodityCategoryGroup, commodityCategoryDescription <br> o) returnStatusMessage: statusCode, serviceName, operationName, protocol <br> p) trackingEventCode: eventTypeCode, eventTypeDescription, visibleToCustomer <br> q) unitOfMeasurement: unitOfMeasurement
        :type filter_by_attribute: str
        :param comparison_operator: Use comparison operator to define the specific match condition for optimized search.
        :type comparison_operator: str
        :param query_string: Use queryString for additional filter criteria in format of '[attribute]:[value]:[comparisonOperator]'. <br> All additional filters are applied together with logical connector 'AND'. <br> Maximum of three additional attribute-value-comparisonOperator combinations. <br> Multiple queryString parameters will be separated  by comma \",\" separator
        :type query_string: str
        :param message_reference: Please provide message reference 
        :type message_reference: str
        :param message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :type message_reference_date: str
        :param plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :type plugin_name: str
        :param plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :type plugin_version: str
        :param shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :type shipping_system_platform_name: str
        :param shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :type shipping_system_platform_version: str
        :param webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :type webstore_platform_name: str
        :param webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :type webstore_platform_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._exp_api_reference_data_serialize(
            dataset_name=dataset_name,
            filter_by_value=filter_by_value,
            filter_by_attribute=filter_by_attribute,
            comparison_operator=comparison_operator,
            query_string=query_string,
            message_reference=message_reference,
            message_reference_date=message_reference_date,
            plugin_name=plugin_name,
            plugin_version=plugin_version,
            shipping_system_platform_name=shipping_system_platform_name,
            shipping_system_platform_version=shipping_system_platform_version,
            webstore_platform_name=webstore_platform_name,
            webstore_platform_version=webstore_platform_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SupermodelIoLogisticsExpressReferenceDataResponse",
            '400': "SupermodelIoLogisticsExpressErrorResponse",
            '404': "SupermodelIoLogisticsExpressErrorResponse",
            '403': "SupermodelIoLogisticsExpressErrorResponse",
            '500': "SupermodelIoLogisticsExpressErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def exp_api_reference_data_with_http_info(
        self,
        dataset_name: Annotated[StrictStr, Field(description="Must provide at least one datasetName value. If providing just the datasetName with no filterBy fields - the response will return the entire data set from the dataset table (bulk).")],
        filter_by_value: Annotated[Optional[StrictStr], Field(description="Use filter by value to query based on the specific string for optimized search.<br> <br> List of supported filterByValue per dataset (eg. dataset: filterByAttribute| supported filterByValue) <br><br> a) returnStatusMessage: serviceName|CreateShipment,DocumentImageRequest,RateRequest,RequestIdentifier,RequestPickup,AddressValidateRequest,TrackingRequest,UpdatePickup,UpdateShipment,UploadInvoiceData,DeleteShipment,DocumentRetrieve-ePOD <br> b) returnStatusMessage: operationName|get-image,identifiers,address-validate,    RouteRequest, shipments, tracking, upload-image,landed-cost,rates,upload-invoice-data,pickup,proof-of-delivery <br> c) returnStatusMessage: protocol|REST,SOAP,XMLPI <br> d) productCode: docNonDocIndicator|Y,N")] = None,
        filter_by_attribute: Annotated[Optional[StrictStr], Field(description="Use filter by attribute to define the list of supported attibuted for the specified datasetName. <br> List of supported attributes per dataset <br> (eg. dataset: supported filterByAttributes values) <br><br> a) country: countryCode, countryName <br> b) countryPostalcodeFormat: countryCode <br> c) dangerousGoods: serviceCode <br> d) incoterm: incoterm <br> e) productCode: productCode, countryCode, docNonDocIndicator <br> f) serviceCode: serviceCode, countryCode, chargeCodeTypeCode, serviceGroupDescription <br> g) packageTypeCode: packageTypeCode <br> h) documentTypeCode: customsDocumentTypeCode <br> i) customerShipmentReferenceType: shipmentReferenceTypeCode <br> j) customerPackageReferenceType: packageReferenceTypeCode <br> k) invoiceReferenceType: invoiceReferenceTypeCode <br> l) invoiceItemReferenceType: itemReferenceTypeCode <br> m) registrationNumberTypeCode: registrationTypeCode <br> n) commodityCategory: commodityCategoryCode, commodityCategoryGroup, commodityCategoryDescription <br> o) returnStatusMessage: statusCode, serviceName, operationName, protocol <br> p) trackingEventCode: eventTypeCode, eventTypeDescription, visibleToCustomer <br> q) unitOfMeasurement: unitOfMeasurement")] = None,
        comparison_operator: Annotated[Optional[StrictStr], Field(description="Use comparison operator to define the specific match condition for optimized search.")] = None,
        query_string: Annotated[Optional[StrictStr], Field(description="Use queryString for additional filter criteria in format of '[attribute]:[value]:[comparisonOperator]'. <br> All additional filters are applied together with logical connector 'AND'. <br> Maximum of three additional attribute-value-comparisonOperator combinations. <br> Multiple queryString parameters will be separated  by comma \",\" separator")] = None,
        message_reference: Annotated[Optional[Annotated[str, Field(min_length=28, strict=True, max_length=36)]], Field(description="Please provide message reference ")] = None,
        message_reference_date: Annotated[Optional[StrictStr], Field(description="Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2")] = None,
        plugin_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the plugin (applicable to 3PV only) ")] = None,
        plugin_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the plugin (applicable to 3PV only) ")] = None,
        shipping_system_platform_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the shipping platform(applicable to 3PV only) ")] = None,
        shipping_system_platform_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the shipping platform (applicable to 3PV only) ")] = None,
        webstore_platform_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the webstore platform (applicable to 3PV only) ")] = None,
        webstore_platform_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the webstore platform (applicable to 3PV only) ")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SupermodelIoLogisticsExpressReferenceDataResponse]:
        """provide reference data currently used for MyDHL API services usage.

        The reference data service retrieves the reference data used for MyDHL API shipment or upload invoice data service. 

        :param dataset_name: Must provide at least one datasetName value. If providing just the datasetName with no filterBy fields - the response will return the entire data set from the dataset table (bulk). (required)
        :type dataset_name: str
        :param filter_by_value: Use filter by value to query based on the specific string for optimized search.<br> <br> List of supported filterByValue per dataset (eg. dataset: filterByAttribute| supported filterByValue) <br><br> a) returnStatusMessage: serviceName|CreateShipment,DocumentImageRequest,RateRequest,RequestIdentifier,RequestPickup,AddressValidateRequest,TrackingRequest,UpdatePickup,UpdateShipment,UploadInvoiceData,DeleteShipment,DocumentRetrieve-ePOD <br> b) returnStatusMessage: operationName|get-image,identifiers,address-validate,    RouteRequest, shipments, tracking, upload-image,landed-cost,rates,upload-invoice-data,pickup,proof-of-delivery <br> c) returnStatusMessage: protocol|REST,SOAP,XMLPI <br> d) productCode: docNonDocIndicator|Y,N
        :type filter_by_value: str
        :param filter_by_attribute: Use filter by attribute to define the list of supported attibuted for the specified datasetName. <br> List of supported attributes per dataset <br> (eg. dataset: supported filterByAttributes values) <br><br> a) country: countryCode, countryName <br> b) countryPostalcodeFormat: countryCode <br> c) dangerousGoods: serviceCode <br> d) incoterm: incoterm <br> e) productCode: productCode, countryCode, docNonDocIndicator <br> f) serviceCode: serviceCode, countryCode, chargeCodeTypeCode, serviceGroupDescription <br> g) packageTypeCode: packageTypeCode <br> h) documentTypeCode: customsDocumentTypeCode <br> i) customerShipmentReferenceType: shipmentReferenceTypeCode <br> j) customerPackageReferenceType: packageReferenceTypeCode <br> k) invoiceReferenceType: invoiceReferenceTypeCode <br> l) invoiceItemReferenceType: itemReferenceTypeCode <br> m) registrationNumberTypeCode: registrationTypeCode <br> n) commodityCategory: commodityCategoryCode, commodityCategoryGroup, commodityCategoryDescription <br> o) returnStatusMessage: statusCode, serviceName, operationName, protocol <br> p) trackingEventCode: eventTypeCode, eventTypeDescription, visibleToCustomer <br> q) unitOfMeasurement: unitOfMeasurement
        :type filter_by_attribute: str
        :param comparison_operator: Use comparison operator to define the specific match condition for optimized search.
        :type comparison_operator: str
        :param query_string: Use queryString for additional filter criteria in format of '[attribute]:[value]:[comparisonOperator]'. <br> All additional filters are applied together with logical connector 'AND'. <br> Maximum of three additional attribute-value-comparisonOperator combinations. <br> Multiple queryString parameters will be separated  by comma \",\" separator
        :type query_string: str
        :param message_reference: Please provide message reference 
        :type message_reference: str
        :param message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :type message_reference_date: str
        :param plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :type plugin_name: str
        :param plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :type plugin_version: str
        :param shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :type shipping_system_platform_name: str
        :param shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :type shipping_system_platform_version: str
        :param webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :type webstore_platform_name: str
        :param webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :type webstore_platform_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._exp_api_reference_data_serialize(
            dataset_name=dataset_name,
            filter_by_value=filter_by_value,
            filter_by_attribute=filter_by_attribute,
            comparison_operator=comparison_operator,
            query_string=query_string,
            message_reference=message_reference,
            message_reference_date=message_reference_date,
            plugin_name=plugin_name,
            plugin_version=plugin_version,
            shipping_system_platform_name=shipping_system_platform_name,
            shipping_system_platform_version=shipping_system_platform_version,
            webstore_platform_name=webstore_platform_name,
            webstore_platform_version=webstore_platform_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SupermodelIoLogisticsExpressReferenceDataResponse",
            '400': "SupermodelIoLogisticsExpressErrorResponse",
            '404': "SupermodelIoLogisticsExpressErrorResponse",
            '403': "SupermodelIoLogisticsExpressErrorResponse",
            '500': "SupermodelIoLogisticsExpressErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def exp_api_reference_data_without_preload_content(
        self,
        dataset_name: Annotated[StrictStr, Field(description="Must provide at least one datasetName value. If providing just the datasetName with no filterBy fields - the response will return the entire data set from the dataset table (bulk).")],
        filter_by_value: Annotated[Optional[StrictStr], Field(description="Use filter by value to query based on the specific string for optimized search.<br> <br> List of supported filterByValue per dataset (eg. dataset: filterByAttribute| supported filterByValue) <br><br> a) returnStatusMessage: serviceName|CreateShipment,DocumentImageRequest,RateRequest,RequestIdentifier,RequestPickup,AddressValidateRequest,TrackingRequest,UpdatePickup,UpdateShipment,UploadInvoiceData,DeleteShipment,DocumentRetrieve-ePOD <br> b) returnStatusMessage: operationName|get-image,identifiers,address-validate,    RouteRequest, shipments, tracking, upload-image,landed-cost,rates,upload-invoice-data,pickup,proof-of-delivery <br> c) returnStatusMessage: protocol|REST,SOAP,XMLPI <br> d) productCode: docNonDocIndicator|Y,N")] = None,
        filter_by_attribute: Annotated[Optional[StrictStr], Field(description="Use filter by attribute to define the list of supported attibuted for the specified datasetName. <br> List of supported attributes per dataset <br> (eg. dataset: supported filterByAttributes values) <br><br> a) country: countryCode, countryName <br> b) countryPostalcodeFormat: countryCode <br> c) dangerousGoods: serviceCode <br> d) incoterm: incoterm <br> e) productCode: productCode, countryCode, docNonDocIndicator <br> f) serviceCode: serviceCode, countryCode, chargeCodeTypeCode, serviceGroupDescription <br> g) packageTypeCode: packageTypeCode <br> h) documentTypeCode: customsDocumentTypeCode <br> i) customerShipmentReferenceType: shipmentReferenceTypeCode <br> j) customerPackageReferenceType: packageReferenceTypeCode <br> k) invoiceReferenceType: invoiceReferenceTypeCode <br> l) invoiceItemReferenceType: itemReferenceTypeCode <br> m) registrationNumberTypeCode: registrationTypeCode <br> n) commodityCategory: commodityCategoryCode, commodityCategoryGroup, commodityCategoryDescription <br> o) returnStatusMessage: statusCode, serviceName, operationName, protocol <br> p) trackingEventCode: eventTypeCode, eventTypeDescription, visibleToCustomer <br> q) unitOfMeasurement: unitOfMeasurement")] = None,
        comparison_operator: Annotated[Optional[StrictStr], Field(description="Use comparison operator to define the specific match condition for optimized search.")] = None,
        query_string: Annotated[Optional[StrictStr], Field(description="Use queryString for additional filter criteria in format of '[attribute]:[value]:[comparisonOperator]'. <br> All additional filters are applied together with logical connector 'AND'. <br> Maximum of three additional attribute-value-comparisonOperator combinations. <br> Multiple queryString parameters will be separated  by comma \",\" separator")] = None,
        message_reference: Annotated[Optional[Annotated[str, Field(min_length=28, strict=True, max_length=36)]], Field(description="Please provide message reference ")] = None,
        message_reference_date: Annotated[Optional[StrictStr], Field(description="Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2")] = None,
        plugin_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the plugin (applicable to 3PV only) ")] = None,
        plugin_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the plugin (applicable to 3PV only) ")] = None,
        shipping_system_platform_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the shipping platform(applicable to 3PV only) ")] = None,
        shipping_system_platform_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the shipping platform (applicable to 3PV only) ")] = None,
        webstore_platform_name: Annotated[Optional[Annotated[str, Field(strict=True, max_length=20)]], Field(description="Please provide name of the webstore platform (applicable to 3PV only) ")] = None,
        webstore_platform_version: Annotated[Optional[Annotated[str, Field(strict=True, max_length=15)]], Field(description="Please provide version of the webstore platform (applicable to 3PV only) ")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """provide reference data currently used for MyDHL API services usage.

        The reference data service retrieves the reference data used for MyDHL API shipment or upload invoice data service. 

        :param dataset_name: Must provide at least one datasetName value. If providing just the datasetName with no filterBy fields - the response will return the entire data set from the dataset table (bulk). (required)
        :type dataset_name: str
        :param filter_by_value: Use filter by value to query based on the specific string for optimized search.<br> <br> List of supported filterByValue per dataset (eg. dataset: filterByAttribute| supported filterByValue) <br><br> a) returnStatusMessage: serviceName|CreateShipment,DocumentImageRequest,RateRequest,RequestIdentifier,RequestPickup,AddressValidateRequest,TrackingRequest,UpdatePickup,UpdateShipment,UploadInvoiceData,DeleteShipment,DocumentRetrieve-ePOD <br> b) returnStatusMessage: operationName|get-image,identifiers,address-validate,    RouteRequest, shipments, tracking, upload-image,landed-cost,rates,upload-invoice-data,pickup,proof-of-delivery <br> c) returnStatusMessage: protocol|REST,SOAP,XMLPI <br> d) productCode: docNonDocIndicator|Y,N
        :type filter_by_value: str
        :param filter_by_attribute: Use filter by attribute to define the list of supported attibuted for the specified datasetName. <br> List of supported attributes per dataset <br> (eg. dataset: supported filterByAttributes values) <br><br> a) country: countryCode, countryName <br> b) countryPostalcodeFormat: countryCode <br> c) dangerousGoods: serviceCode <br> d) incoterm: incoterm <br> e) productCode: productCode, countryCode, docNonDocIndicator <br> f) serviceCode: serviceCode, countryCode, chargeCodeTypeCode, serviceGroupDescription <br> g) packageTypeCode: packageTypeCode <br> h) documentTypeCode: customsDocumentTypeCode <br> i) customerShipmentReferenceType: shipmentReferenceTypeCode <br> j) customerPackageReferenceType: packageReferenceTypeCode <br> k) invoiceReferenceType: invoiceReferenceTypeCode <br> l) invoiceItemReferenceType: itemReferenceTypeCode <br> m) registrationNumberTypeCode: registrationTypeCode <br> n) commodityCategory: commodityCategoryCode, commodityCategoryGroup, commodityCategoryDescription <br> o) returnStatusMessage: statusCode, serviceName, operationName, protocol <br> p) trackingEventCode: eventTypeCode, eventTypeDescription, visibleToCustomer <br> q) unitOfMeasurement: unitOfMeasurement
        :type filter_by_attribute: str
        :param comparison_operator: Use comparison operator to define the specific match condition for optimized search.
        :type comparison_operator: str
        :param query_string: Use queryString for additional filter criteria in format of '[attribute]:[value]:[comparisonOperator]'. <br> All additional filters are applied together with logical connector 'AND'. <br> Maximum of three additional attribute-value-comparisonOperator combinations. <br> Multiple queryString parameters will be separated  by comma \",\" separator
        :type query_string: str
        :param message_reference: Please provide message reference 
        :type message_reference: str
        :param message_reference_date: Optional reference date in the  HTTP-date format https://tools.ietf.org/html/rfc7231#section-7.1.1.2
        :type message_reference_date: str
        :param plugin_name: Please provide name of the plugin (applicable to 3PV only) 
        :type plugin_name: str
        :param plugin_version: Please provide version of the plugin (applicable to 3PV only) 
        :type plugin_version: str
        :param shipping_system_platform_name: Please provide name of the shipping platform(applicable to 3PV only) 
        :type shipping_system_platform_name: str
        :param shipping_system_platform_version: Please provide version of the shipping platform (applicable to 3PV only) 
        :type shipping_system_platform_version: str
        :param webstore_platform_name: Please provide name of the webstore platform (applicable to 3PV only) 
        :type webstore_platform_name: str
        :param webstore_platform_version: Please provide version of the webstore platform (applicable to 3PV only) 
        :type webstore_platform_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._exp_api_reference_data_serialize(
            dataset_name=dataset_name,
            filter_by_value=filter_by_value,
            filter_by_attribute=filter_by_attribute,
            comparison_operator=comparison_operator,
            query_string=query_string,
            message_reference=message_reference,
            message_reference_date=message_reference_date,
            plugin_name=plugin_name,
            plugin_version=plugin_version,
            shipping_system_platform_name=shipping_system_platform_name,
            shipping_system_platform_version=shipping_system_platform_version,
            webstore_platform_name=webstore_platform_name,
            webstore_platform_version=webstore_platform_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SupermodelIoLogisticsExpressReferenceDataResponse",
            '400': "SupermodelIoLogisticsExpressErrorResponse",
            '404': "SupermodelIoLogisticsExpressErrorResponse",
            '403': "SupermodelIoLogisticsExpressErrorResponse",
            '500': "SupermodelIoLogisticsExpressErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _exp_api_reference_data_serialize(
        self,
        dataset_name,
        filter_by_value,
        filter_by_attribute,
        comparison_operator,
        query_string,
        message_reference,
        message_reference_date,
        plugin_name,
        plugin_version,
        shipping_system_platform_name,
        shipping_system_platform_version,
        webstore_platform_name,
        webstore_platform_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if dataset_name is not None:
            
            _query_params.append(('datasetName', dataset_name))
            
        if filter_by_value is not None:
            
            _query_params.append(('filterByValue', filter_by_value))
            
        if filter_by_attribute is not None:
            
            _query_params.append(('filterByAttribute', filter_by_attribute))
            
        if comparison_operator is not None:
            
            _query_params.append(('comparisonOperator', comparison_operator))
            
        if query_string is not None:
            
            _query_params.append(('queryString', query_string))
            
        # process the header parameters
        if message_reference is not None:
            _header_params['Message-Reference'] = message_reference
        if message_reference_date is not None:
            _header_params['Message-Reference-Date'] = message_reference_date
        if plugin_name is not None:
            _header_params['Plugin-Name'] = plugin_name
        if plugin_version is not None:
            _header_params['Plugin-Version'] = plugin_version
        if shipping_system_platform_name is not None:
            _header_params['Shipping-System-Platform-Name'] = shipping_system_platform_name
        if shipping_system_platform_version is not None:
            _header_params['Shipping-System-Platform-Version'] = shipping_system_platform_version
        if webstore_platform_name is not None:
            _header_params['Webstore-Platform-Name'] = webstore_platform_name
        if webstore_platform_version is not None:
            _header_params['Webstore-Platform-Version'] = webstore_platform_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
            'apiKey', 
            'basicAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/reference-data',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


