# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from openapi_client.models.supermodel_io_logistics_express_account import SupermodelIoLogisticsExpressAccount
from openapi_client.models.supermodel_io_logistics_express_upload_invoice_data_request_content import SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent
from openapi_client.models.supermodel_io_logistics_express_upload_invoice_data_request_customer_details import SupermodelIoLogisticsExpressUploadInvoiceDataRequestCustomerDetails
from openapi_client.models.supermodel_io_logistics_express_upload_invoice_data_request_output_image_properties import SupermodelIoLogisticsExpressUploadInvoiceDataRequestOutputImageProperties
from typing import Optional, Set
from typing_extensions import Self

class SupermodelIoLogisticsExpressUploadInvoiceDataRequestSID(BaseModel):
    """
    MyDHL API REST UploadInvoiceData request JSON Schema
    """ # noqa: E501
    shipment_tracking_number: Optional[StrictStr] = Field(default=None, description="Please provide Shipment Identification number (AWB number)", alias="shipmentTrackingNumber")
    planned_ship_date: Optional[Annotated[str, Field(strict=True)]] = Field(default=None, description="The planned shipment date for the provided shipmentTrackingNumber.  The date must be in the format: YYYY-MM-DD", alias="plannedShipDate")
    accounts: Optional[Annotated[List[SupermodelIoLogisticsExpressAccount], Field(min_length=0, max_length=2)]] = Field(default=None, description="Please enter all the DHL Express accounts and types to be used for this shipment.   Note: accounts/0/number with typeCode 'shipper' is mandatory if using POST method and no shipmentTrackingNumber is provided in request.")
    content: SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent
    output_image_properties: Optional[SupermodelIoLogisticsExpressUploadInvoiceDataRequestOutputImageProperties] = Field(default=None, alias="outputImageProperties")
    customer_details: Optional[SupermodelIoLogisticsExpressUploadInvoiceDataRequestCustomerDetails] = Field(default=None, alias="customerDetails")
    __properties: ClassVar[List[str]] = ["shipmentTrackingNumber", "plannedShipDate", "accounts", "content", "outputImageProperties", "customerDetails"]

    @field_validator('planned_ship_date')
    def planned_ship_date_validate_regular_expression(cls, value):
        """Validates the regular expression"""
        if value is None:
            return value

        if not re.match(r"^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$", value):
            raise ValueError(r"must validate the regular expression /^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$/")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SupermodelIoLogisticsExpressUploadInvoiceDataRequestSID from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in accounts (list)
        _items = []
        if self.accounts:
            for _item in self.accounts:
                if _item:
                    _items.append(_item.to_dict())
            _dict['accounts'] = _items
        # override the default output from pydantic by calling `to_dict()` of content
        if self.content:
            _dict['content'] = self.content.to_dict()
        # override the default output from pydantic by calling `to_dict()` of output_image_properties
        if self.output_image_properties:
            _dict['outputImageProperties'] = self.output_image_properties.to_dict()
        # override the default output from pydantic by calling `to_dict()` of customer_details
        if self.customer_details:
            _dict['customerDetails'] = self.customer_details.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SupermodelIoLogisticsExpressUploadInvoiceDataRequestSID from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "shipmentTrackingNumber": obj.get("shipmentTrackingNumber"),
            "plannedShipDate": obj.get("plannedShipDate"),
            "accounts": [SupermodelIoLogisticsExpressAccount.from_dict(_item) for _item in obj["accounts"]] if obj.get("accounts") is not None else None,
            "content": SupermodelIoLogisticsExpressUploadInvoiceDataRequestContent.from_dict(obj["content"]) if obj.get("content") is not None else None,
            "outputImageProperties": SupermodelIoLogisticsExpressUploadInvoiceDataRequestOutputImageProperties.from_dict(obj["outputImageProperties"]) if obj.get("outputImageProperties") is not None else None,
            "customerDetails": SupermodelIoLogisticsExpressUploadInvoiceDataRequestCustomerDetails.from_dict(obj["customerDetails"]) if obj.get("customerDetails") is not None else None
        })
        return _obj


