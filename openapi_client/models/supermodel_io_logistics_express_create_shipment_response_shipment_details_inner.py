# coding: utf-8

"""
    DHL Express APIs (MyDHL API)

    Welcome to the official DHL Express APIs (MyDHL API) below are the published API Documentation to fulfill your shipping needs with DHL Express.       Please follow the process described [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--get-access) to request access to the DHL Express - MyDHL API services   In case you already have DHL Express - MyDHL API Service credentials please ensure to use the endpoints/environments listed  [here](https://developer.dhl.com/api-reference/dhl-express-mydhl-api#get-started-section/user-guide--environments) 

    The version of the OpenAPI document: 2.11.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing_extensions import Annotated
from openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_customer_details import SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerCustomerDetails
from openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_destination_service_area import SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerDestinationServiceArea
from openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_origin_service_area import SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerOriginServiceArea
from openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_pickup_details import SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerPickupDetails
from openapi_client.models.supermodel_io_logistics_express_create_shipment_response_shipment_details_inner_value_added_services_inner import SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerValueAddedServicesInner
from typing import Optional, Set
from typing_extensions import Self

class SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInner(BaseModel):
    """
    SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInner
    """ # noqa: E501
    service_handling_feature_codes: Optional[List[StrictStr]] = Field(default=None, description="This array contains all the DHL Express special handling feature codes", alias="serviceHandlingFeatureCodes")
    volumetric_weight: Optional[Union[Annotated[float, Field(multiple_of=0.001, le=999999999999, strict=True)], Annotated[int, Field(le=2147483647, strict=True)]]] = Field(default=None, description="Here you can find calculated volumetric weight based on dimensions provided in the request", alias="volumetricWeight")
    billing_code: Optional[StrictStr] = Field(default=None, description="Here you can find billing code which was applied on your shipment", alias="billingCode")
    service_content_code: Optional[StrictStr] = Field(default=None, description="Here you can find the DHL Express shipment content code of your shipment", alias="serviceContentCode")
    customer_details: Optional[SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerCustomerDetails] = Field(default=None, alias="customerDetails")
    origin_service_area: Optional[SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerOriginServiceArea] = Field(default=None, alias="originServiceArea")
    destination_service_area: Optional[SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerDestinationServiceArea] = Field(default=None, alias="destinationServiceArea")
    dhl_routing_code: Optional[StrictStr] = Field(default=None, description="Here you can find DHL Routing Code which was applied on your shipment", alias="dhlRoutingCode")
    dhl_routing_data_id: Optional[StrictStr] = Field(default=None, description="Here you can find DHL Routing Data ID which was applied on your shipment", alias="dhlRoutingDataId")
    delivery_date_code: Optional[StrictStr] = Field(default=None, description="Here you can find Delivery Date Code which was applied on your shipment", alias="deliveryDateCode")
    delivery_time_code: Optional[StrictStr] = Field(default=None, description="Here you can find Delivery Time Code which was applied on your shipment", alias="deliveryTimeCode")
    product_short_name: Optional[StrictStr] = Field(default=None, description="Here you can find the product short name of your shipment", alias="productShortName")
    value_added_services: Optional[Annotated[List[SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerValueAddedServicesInner], Field(max_length=99)]] = Field(default=None, alias="valueAddedServices")
    pickup_details: Optional[SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerPickupDetails] = Field(default=None, alias="pickupDetails")
    __properties: ClassVar[List[str]] = ["serviceHandlingFeatureCodes", "volumetricWeight", "billingCode", "serviceContentCode", "customerDetails", "originServiceArea", "destinationServiceArea", "dhlRoutingCode", "dhlRoutingDataId", "deliveryDateCode", "deliveryTimeCode", "productShortName", "valueAddedServices", "pickupDetails"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of customer_details
        if self.customer_details:
            _dict['customerDetails'] = self.customer_details.to_dict()
        # override the default output from pydantic by calling `to_dict()` of origin_service_area
        if self.origin_service_area:
            _dict['originServiceArea'] = self.origin_service_area.to_dict()
        # override the default output from pydantic by calling `to_dict()` of destination_service_area
        if self.destination_service_area:
            _dict['destinationServiceArea'] = self.destination_service_area.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in value_added_services (list)
        _items = []
        if self.value_added_services:
            for _item in self.value_added_services:
                if _item:
                    _items.append(_item.to_dict())
            _dict['valueAddedServices'] = _items
        # override the default output from pydantic by calling `to_dict()` of pickup_details
        if self.pickup_details:
            _dict['pickupDetails'] = self.pickup_details.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "serviceHandlingFeatureCodes": obj.get("serviceHandlingFeatureCodes"),
            "volumetricWeight": obj.get("volumetricWeight"),
            "billingCode": obj.get("billingCode"),
            "serviceContentCode": obj.get("serviceContentCode"),
            "customerDetails": SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerCustomerDetails.from_dict(obj["customerDetails"]) if obj.get("customerDetails") is not None else None,
            "originServiceArea": SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerOriginServiceArea.from_dict(obj["originServiceArea"]) if obj.get("originServiceArea") is not None else None,
            "destinationServiceArea": SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerDestinationServiceArea.from_dict(obj["destinationServiceArea"]) if obj.get("destinationServiceArea") is not None else None,
            "dhlRoutingCode": obj.get("dhlRoutingCode"),
            "dhlRoutingDataId": obj.get("dhlRoutingDataId"),
            "deliveryDateCode": obj.get("deliveryDateCode"),
            "deliveryTimeCode": obj.get("deliveryTimeCode"),
            "productShortName": obj.get("productShortName"),
            "valueAddedServices": [SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerValueAddedServicesInner.from_dict(_item) for _item in obj["valueAddedServices"]] if obj.get("valueAddedServices") is not None else None,
            "pickupDetails": SupermodelIoLogisticsExpressCreateShipmentResponseShipmentDetailsInnerPickupDetails.from_dict(obj["pickupDetails"]) if obj.get("pickupDetails") is not None else None
        })
        return _obj


